<!DOCTYPE html>
<html lang="en">
<head>
	<title>Login | Kyanit</title>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link rel="stylesheet" href="/main.css">
	<link rel="stylesheet" href="/css/signup.css">
</head>
<body>
	<%- include('partials/header.ejs') %>
	<main>
		<form action="" method="post" id="signup-form">
			<div id="signup">
				<div id="signup--title">Login <a href="/signup">Signup</a></div>
				<div id="signup--message"></div>
				<div id="signup--username">
					<label for="signup--username--input">Username</label>
					<input type="text" id="signup--username--input" placeholder="Username" required/>
				</div>
				<div id="signup--password">
					<label for="signup--password--input">Password</label>
					<input type="password" id="signup--password--input" placeholder="Password" required/>
				</div>
				<button type="submit" id="signup--button" class="ripple">Login</button>
				<div id="signup--bottom-text">Donâ€™t have an account? <a href="/signup">Sign up</a></div>
			</div>
		</form>
	</main>
</body>
<script type="module">
	import ui from '/js/modules/ui.mjs';

	const form = $('#signup-form')
	const messageBox = $('#signup--message');
	const usernameInput = $('#signup--username--input');
	const passwordInput = $('#signup--password--input');
	const signupButton = $('#signup--button');

	form.onsubmit = submit;

	async function submit(event) {
		event.preventDefault();

		if(!usernameInput.value) {
			messageBox.innerText = 'Username is required!';
			return;
		} else if(!passwordInput.value) {
			messageBox.innerText = 'Password is required!';
			return;
		}

		// Disable inputs and clear message box.
		toggleInputs(false);
		messageBox.innerText = '';

		const inputs = {
			username: usernameInput.value,
			password: passwordInput.value
		}

		try {
			const response = await fetch('/auth/login', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(inputs)
			});

			if(!response.ok) {
				// Handle invalid requests.
				const json = await response.json();

				messageBox.innerText = json.error.message;
				toggleInputs(true);
			} else {
				// Success.
				$('#signup--title').innerHTML = 'Logged in! <a href="/login">Signup</a>';
				$('#signup').classList.add('success');

				location.assign(`/user/${inputs.username}`);
			}
		} catch (error) {
			ui.alert({ title: 'Unexpected Error', content: error });
			toggleInputs(true);
		}
	}

	/** @param {boolean} state - `true` means enabled, `false` means disabled */
	function toggleInputs(state) {
		usernameInput.disabled = !state;
		passwordInput.disabled = !state;
		signupButton.disabled = !state;

		if(state) form.onsubmit = submit;
		else form.onsubmit = null;
	}
</script>
</html>