CREATE TABLE users (
	name TEXT PRIMARY KEY,
	password TEXT NOT NULL,
	display_name TEXT NOT NULL,
	about TEXT,
	is_verified BOOLEAN NOT NULL DEFAULT false,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE notes (
	id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
	author_name TEXT NOT NULL REFERENCES users(name) ON DELETE CASCADE,
	title TEXT NOT NULL,
	content TEXT NOT NULL,
	keywords TEXT[] NOT NULL DEFAULT '{}',
	unlisted BOOLEAN NOT NULL DEFAULT false,
	thumbnail_url TEXT,
	views INTEGER NOT NULL DEFAULT 0,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE comments (
	id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
	commenter_name TEXT NOT NULL REFERENCES users(name) ON DELETE CASCADE,
	note_id UUID NOT NULL REFERENCES notes(id) ON DELETE CASCADE,
	parent_comment_id UUID DEFAULT NULL REFERENCES comments(id) ON DELETE CASCADE,
	content TEXT NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE comment_votes (
	comment_id UUID NOT NULL REFERENCES comments(id) ON DELETE CASCADE,
	note_id UUID NOT NULL REFERENCES notes(id) ON DELETE CASCADE,
	voter_name TEXT NOT NULL REFERENCES users(name) ON DELETE CASCADE,
	value INTEGER NOT NULL CHECK (value IN (1, -1))
);